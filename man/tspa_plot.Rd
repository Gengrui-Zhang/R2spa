% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tspa_plot.R
\name{tspa_plot}
\alias{tspa_plot}
\title{Diagnostic plots of fitted 2S-PA model}
\usage{
tspa_plot(
  tspa_fit,
  title = NULL,
  label_x = NULL,
  label_y = NULL,
  abbreviation = TRUE,
  fscores_type = c("original", "lavaan"),
  ask = FALSE,
  ...
)
}
\arguments{
\item{tspa_fit}{An object of class \link[=lavaan-class]{lavaan},
representing the output generated from the \code{\link[=tspa]{tspa()}}
function.}

\item{title}{Character. Set the name of scatter plot. The default value is
"Scatterplot".}

\item{label_x}{Character. Set the name of the x-axis. The default value is
"fs_" followed by variable names.}

\item{label_y}{Character. Set the name of the y-axis. The default value is
"fs_" followed by variable names.}

\item{abbreviation}{Logic input. If \code{FALSE} is indicated, the group name
will be shown in full. The default setting is \code{TRUE}.}

\item{ask}{Logic input. If \code{TRUE} is indicated, the user will be asked before
before each plot is generated. The default setting is 'False'.}

\item{...}{Additional arguments passed to \code{\link[graphics]{plot}}. See
\code{\link[graphics]{plot}} for a list.}

\item{fscore_type}{Character. Set the type of factor score for input.
The default setting is using factor score from observed
data (i.e., output from \code{\link[=get_fs]{get_fs()}}). If
\code{fscore_type = "est"}, then it will use output from
\code{\link[lavaan:lavPredict]{lavaan::lavPredict()}}.}
}
\value{
A scatterplot between factor scores, and a residual plot.
}
\description{
Diagnostic plots of fitted 2S-PA model
}
\examples{
library(lavaan)
model <- "
# latent variable definitions
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + a*y2 + b*y3 + c*y4
# regressions
dem60 ~ ind60
"
fs_dat_ind60 <- get_fs(
  data = PoliticalDemocracy,
  model = "ind60 =~ x1 + x2 + x3"
)
fs_dat_dem60 <- get_fs(
  data = PoliticalDemocracy,
  model = "dem60 =~ y1 + y2 + y3 + y4"
)
fs_dat <- cbind(fs_dat_ind60, fs_dat_dem60)

tspa_fit <- tspa(
  model = "dem60 ~ ind60",
  data = fs_dat,
  se = list(ind60 = 0.1213615, dem60 = 0.6756472)
)
tspa_plot(tspa_fit)
}
