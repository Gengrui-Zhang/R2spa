% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tspa.R
\name{tspa}
\alias{tspa}
\title{Two-Stage Path Analysis}
\usage{
tspa(
  model,
  data,
  reliability = NULL,
  se = NULL,
  vc = NULL,
  cross_loadings = NULL,
  ...
)
}
\arguments{
\item{model}{A string variable describing the structural path model,
in \code{lavaan} syntax.}

\item{data}{A data frame containing factor scores.}

\item{reliability}{A numeric vector representing the reliability indexes
of each latent factor. Currently \code{tspa()} does not
support the reliability argument. Please use \code{se}.}

\item{se}{A numeric vector representing the standard errors of each latent
factor for single-group 2S-PA. A list or data frame storing
the standard errors of each group in each latent factor for
multigroup 2S-PA.}

\item{...}{Additional arguments passed to \code{\link[lavaan]{sem}}. See
\code{\link[lavaan]{lavOptions}} for a complete list.}
}
\value{
An object of class \code{lavaan}, with an attribute \code{tspaModel}
that contains the model syntax.
}
\description{
Fit a two-stage path analysis (2S-PA) model.
}
\examples{
library(lavaan)

# single-group, two-factor example
mod1 <- "
   # latent variables
     ind60 =~ x1 + x2 + x3
     dem60 =~ y1 + y2 + y3 + y4
"
fs_dat1 <- get_fs(PoliticalDemocracy, model = mod1, std.lv = TRUE)
tspa(model = "dem60 ~ ind60", data = fs_dat1,
     vc = attr(fs_dat1, "av_efs"), cross_loadings = attr(fs_dat1, "fsA"))

# single-group, three-factor example
mod2 <- "
  # latent variables
    ind60 =~ x1 + x2 + x3
    dem60 =~ y1 + y2 + y3 + y4
    dem65 =~ y5 + y6 + y7 + y8
"
fs_dat2 <- get_fs(PoliticalDemocracy, model = mod2, std.lv = TRUE)
tspa(model = "dem60 ~ ind60
              dem65 ~ ind60 + dem60",
     data = fs_dat2,
     vc = attr(fs_dat2, "av_efs"),
     cross_loadings = attr(fs_dat2, "fsA"))

# multigroup, two-factor example
mod3 <- "
  # latent variables
    visual =~ x1 + x2 + x3
    speed =~ x7 + x8 + x9
"
fs_dat3 <- get_fs(HolzingerSwineford1939, model = mod3, std.lv = TRUE,
                  group = "school")
tspa(model = "visual ~ speed",
     data = fs_dat3,
     vc = attr(fs_dat3, "av_efs"),
     cross_loadings = attr(fs_dat3, "fsA"))

# get factor scores
fs_dat_visual <- get_fs(data = HolzingerSwineford1939,
                        model = "visual =~ x1 + x2 + x3",
                        group = "school")
fs_dat_speed <- get_fs(data = HolzingerSwineford1939,
                       model = "speed =~ x7 + x8 + x9",
                       group = "school")
fs_hs <- cbind(fs_dat_visual, fs_dat_speed)

# tspa model
tspa(model = "visual ~ speed",
     data = fs_hs,
     se = data.frame(visual = c(0.3391326, 0.311828),
                     speed = c(0.2786875, 0.2740507)),
     group = "school",
     group.equal = "regressions")

# manually adding equality constraints on the regression coefficients
tspa(model = "visual ~ c(b1, b1) * speed",
     data = fs_hs,
     se = list(visual = c(0.3391326, 0.311828),
               speed = c(0.2786875, 0.2740507)),
     group = "school")
}
